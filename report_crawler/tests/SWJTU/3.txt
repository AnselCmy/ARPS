Report time：
20170713

Title：
Adaptive Systems

 

	

Time：
2017年7月13日（星期四）上午10:00

 

	

Address：
九里校区镜湖宾馆若愚厅

 

	

Speaker：
Prof. David
Garlan(Carnegie Mellon University)

 

	

Organizer：
西南交通大学大学计算机科学与技术学院

Biography：
David Garlan is a Professor of Computer Science in the
School of Computer Science at Carnegie Mellon University.    His research interests include software
architecture, self-adaptive systems, formal methods, and cyber-physical systems.  He is recognized as one of the founders of
the field of software architecture, and, in particular, formal representation
and analysis of architectural designs. He is a co-author of two books on
software architecture: "Software Architecture: Perspectives on an Emerging
Discipline", and "Documenting Software Architecture: Views and
Beyond." In 2005 he received a Stevens Award Citation for “fundamental
contributions to the development and understanding of software architecture as
a discipline in software engineering.” In 2011 he received the Outstanding
Research award from ACM SIGSOFT for “significant and lasting software
engineering research contributions through the development and promotion of
software architecture.” In 2016 he received the Allen Newell Award for Research
Excellence, and the 2017 IEEE TCSE Distinguished Education Award. He is a
Fellow of both the IEEE and the ACM.
	

Abstract：
An increasingly important
challenge for modern software systems is to provide uninterrupted and optimal
service even in the presence of faults, changing environmental conditions, and
attacks. To address this challenge, we need new ways to build systems that take
more control over their own dependability, security, and usefulness –
automating many of the tasks that today require computing experts and
administrator to manage. This emerging requirement has led to a new subfield of
software engineering and systems design, termed Autonomic Computing,
Self-healing Systems, or Self-adaptive Systems. In this talk I describe this
emerging field and recent advances that allow software developers to address
fundamental engineering challenges, including techniques to (a) support
self-healing through architectural models and automated repair, (b) synthesize
optimal adaptation strategies in the presence of uncertainty, (c) support
self-securing systems, and (d) reason about human-in-the loop systems.
	

